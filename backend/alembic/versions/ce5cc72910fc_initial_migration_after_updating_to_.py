"""Initial migration after updating to fastapi users

Revision ID: ce5cc72910fc
Revises: 
Create Date: 2023-09-03 12:07:10.070012

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ce5cc72910fc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('quiz',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('response',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'NORMAL', 'ADVISOR', name='userrole'), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('question',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('quiz_attempt',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('subjects', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.uid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('slot',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('advisor_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('question_response',
    sa.Column('quiz_attempt_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('response_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.uid'], ),
    sa.ForeignKeyConstraint(['quiz_attempt_id'], ['quiz_attempt.uid'], ),
    sa.ForeignKeyConstraint(['response_id'], ['response.uid'], ),
    sa.PrimaryKeyConstraint('quiz_attempt_id', 'question_id', 'response_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('question_response')
    op.drop_table('slot')
    op.drop_table('quiz_attempt')
    op.drop_table('question')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('response')
    op.drop_table('quiz')
    # ### end Alembic commands ###
